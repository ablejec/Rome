% -*- TeX:Rnw:UTF-8 -*-
% ----------------------------------------------------------------
% .R knitr file  ************************************************
% ----------------------------------------------------------------
%%
% \VignetteIndexEntry{}
% \VignetteDepends{}
% \VignettePackage{}
\documentclass[a4paper,12pt]{article}
%\usepackage[slovene]{babel}
\usepackage[utf8]{inputenc} %% must be here for Sweave encoding check
\input{abpkg}
\input{abcmd}
\input{abpage}
\usepackage{pgf,pgfarrows,pgfnodes,pgfautomata,pgfheaps,pgfshade}
\usepackage{amsmath,amssymb}
\usepackage{colortbl}

\input{mysweave}

<<include=FALSE>>=
render_sweave()
opts_chunk$set(fig.path='./figs/bla',concordance=TRUE,tidy=TRUE)
@
\setkeys{Gin}{width=0.8\textwidth}  % set graphicx parameter
\usepackage{lmodern}
\input{abfont}

% ----------------------------------------------------------------
\begin{document}
%% Sweave settings for includegraphics default plot size (Sweave default is 0.8)
%% notice this must be after begin{document}
%%% \setkeys{Gin}{width=0.9\textwidth}
% ----------------------------------------------------------------
\title{HowTo Get data from the EUROSTAT}
\author{A. Blejec}
%\address{}%
%\email{}%
%
%\thanks{}%
%\subjclass{}%
%\keywords{}%

%\date{}%
%\dedicatory{}%
%\commby{}%
\maketitle
% ----------------------------------------------------------------
%\begin{abstract}
%
%\end{abstract}
% ----------------------------------------------------------------
\tableofcontents
<<Author:,echo=FALSE>>=
###############################################
##                                           ##
## (c) Andrej Blejec (andrej.blejec@nib.si)  ##
##                                           ##
###############################################
@
<<initialize,echo=FALSE,results='hide',message=FALSE>>=
options(width=70)
library(Hmisc)
#library(xlsReadWrite)
@

\section{Introduction}

To make reproducible reports from the EUROSTAT data, I will explore
the possibility to download data from their repository. They provide data in different formats, with footnotes and labels included or not included. The most promising for automatic retreival is the so called \bold{TSV} format which is in fact tab separated file. This file is included in the \file{.zip} or \file{.gz} file.

\section{Finding the file name}

We will explore it later.

\section{Get the data}

Asumming that we have the desired file code, we can get it by composing the
URL:

<<>>=
fcode <- "tps00001"
fcode <- "tps00025" # Life expectancy at birth, by sex
# http://epp.eurostat.ec.europa.eu/portal/page/portal/product_details/dataset?p_product_code=tps00025

lfn <- paste(fcode,".tsv",sep="")
upre <- "http://epp.eurostat.ec.europa.eu/NavTree_prod/everybody/BulkDownloadListing?file=data/"
upost <- ".tsv.gz"
furl <-paste( upre,fcode,upost,sep="")
furl
@

<<>>=
temp <- tempfile()
download.file(furl,temp)
data <- read.table(gzfile(temp), sep="\t", header=TRUE, row.names=1,
na.strings=": ")
unlink(temp)
@

Show the data structure

<<>>=
str(data)
@

First few lines

<<>>=
head(data)
@

\section{Clean the data}

Some data contain labels and can be suffixed with a space. So we have to clean the data.

<<>>=
X <- data
X <- as.data.frame(
apply(X, 2, function(x) as.numeric(sapply(x,
FUN=function(u) gsub("[[:alpha:][:blank:]]","",u)))))
dimnames(X)[[1]] <- dimnames(data)[[1]]
@

Show the structure
<<>>=
str(X)
@

and first few lines

<<>>=
head(X)
@
\subsection{Parse meta data}

Meta data are encoded in the first column, used as the row names. We can parse the data.

<<>>=
meta <- sapply(dimnames(X)[[1]],strsplit,split=",") 
meta <- matrix(unlist(meta),ncol=length(meta[[1]]),byrow=TRUE)
dimnames(meta)[[1]] <- dimnames(X)[[1]]
head(meta)
@

Select specific country data

<<>>=
countries <- c("SI","EU28","IT")
filter <- meta[,3] %in% countries
Y <- X[filter,]
time <- as.numeric(gsub("X","",dimnames(X)[[2]]))

@

<<>>=
ylim <- c(50,max(Y,na.rm=TRUE)*1.1)
plot(time,time,ylim=ylim,xlim=range(time),ylab="")
for(i in 1: dim(Y)[1]) lines(time,Y[i,],col=i,type="b")
@
<<>>=

@

%<<child='encChild2.Rnw'>>=
%@
% ----------------------------------------------------------------
%\bibliographystyle{chicago}
%\addcontentsline{toc}{section}{\refname}
%\bibliography{ab-general}
%--------------------------------------------------------------

%\clearpage
%\appendix
%\phantomsection\addcontentsline{toc}{section}{\appendixname}
%\section{\R\ funkcije}
%\input{}

\clearpage
\section*{SessionInfo}
{\small
<<sessionInfo,results='asis',echo=FALSE>>=
cat(win.version(),"\n")
toLatex(sessionInfo())
cat("Project path:\\verb'",dirname(getwd()),"'\\\\\n")
mainFile <- commandArgs(trailingOnly = TRUE)
#
mainFilePath <- file.path("../doc", mainFile[1])
cat("Main file :\\verb'", mainFilePath, "'\n")
#
mainFile <- strsplit(mainFile,'.',fixed=TRUE)[[1]][1]
projectName <- rev((strsplit(dirname(getwd()), "/"))[[1]])[1]
#
@

\subsection*{View as vignette}
Project files can be viewed by pasting this code to \R\ console:\\
\begin{Schunk}
\begin{Sinput}
<<projectFiles,echo=FALSE,results='asis'>>=
cat('> projectName <-"',projectName,'"; ',sep="")
cat(' mainFile <-"',mainFile,'"',sep="")
#
@

\end{Sinput}
\end{Schunk}
<<vignette,eval=FALSE>>=
commandArgs()
library(tkWidgets)
openPDF(file.path(dirname(getwd()),"doc",
paste(mainFile,"PDF",sep=".")))
viewVignette("viewVignette", projectName, #
file.path("../doc",paste(mainFile,"Rnw",sep=".")))
#
@

\vfill \hrule \vspace{3pt} \footnotesize{
%Revision \SVNId\hfill (c) A. Blejec%\input{../_COPYRIGHT.}
%\SVNRevision ~/~ \SVNDate
\noindent
\texttt{Git Revision: \gitCommitterUnixDate \gitAbbrevHash{} (\gitCommitterDate)} \hfill \copyright A. Blejec\\
\texttt{ \gitReferences} \hfill \verb'\Sexpr{mainFilePath}'\\

}

<<eval=FALSE,echo=FALSE>>=
# getrootpath <- function() {
# fp <- (strsplit(getwd(), "/"))[[1]]
# file <- file.path(paste(fp[-length(fp)], collapse = "/"))
# return(file)
# }
# fileName <- function(name="bla",ext="PDF") paste(name,ext,sep=".")
@


\end{document}
% ----------------------------------------------------------------
